!function(){"use strict";angular.module("ngDam",["ngMaterial","ui.router","ngMessages","ngCookies","ngAnimate","navigation","account"])}(),function(){"use strict";function UserService($timeout,$filter,$q){function GetAll(){var deferred=$q.defer();return deferred.resolve(getUsers()),deferred.promise}function GetById(id){var deferred=$q.defer(),filtered=$filter("filter")(getUsers(),{id:id}),user=filtered.length?filtered[0]:null;return deferred.resolve(user),deferred.promise}function GetByUsername(username){var deferred=$q.defer(),filtered=$filter("filter")(getUsers(),{username:username}),user=filtered.length?filtered[0]:null;return deferred.resolve(user),deferred.promise}function Create(user){var deferred=$q.defer();return $timeout(function(){new GetByUsername(user.username).then(function(duplicateUser){if(null!==duplicateUser)deferred.resolve({success:!1,message:'Username "'+user.username+'" is already taken'});else{var users=getUsers(),lastUser=users[users.length-1]||{id:0};user.id=lastUser.id+1,users.push(user),setUsers(users),deferred.resolve({success:!0})}})},1e3),deferred.promise}function Update(user){for(var deferred=$q.defer(),users=getUsers(),i=0;i<users.length;i++)if(users[i].id===user.id){users[i]=user;break}return setUsers(users),deferred.resolve(),deferred.promise}function Delete(id){for(var deferred=$q.defer(),users=getUsers(),i=0;i<users.length;i++){var user=users[i];if(user.id===id){users.splice(i,1);break}}return setUsers(users),deferred.resolve(),deferred.promise}function getUsers(){return localStorage.users||(localStorage.users=JSON.stringify([])),JSON.parse(localStorage.users)}function setUsers(users){localStorage.users=JSON.stringify(users)}var service={GetAll:GetAll,GetById:GetById,GetByUsername:GetByUsername,Create:Create,Update:Update,Delete:Delete};return service}angular.module("ngDam").factory("UserService",UserService),UserService.$inject=["$timeout","$filter","$q"]}(),function(){"use strict";function FlashService($rootScope){function initService(){function clearFlashMessage(){var flash=$rootScope.flash;flash&&(flash.keepAfterLocationChange?flash.keepAfterLocationChange=!1:delete $rootScope.flash)}$rootScope.$on("$locationChangeStart",function(){clearFlashMessage()})}function Success(message,keepAfterLocationChange){$rootScope.flash={message:message,type:"success",keepAfterLocationChange:keepAfterLocationChange}}function Error(message,keepAfterLocationChange){$rootScope.flash={message:message,type:"error",keepAfterLocationChange:keepAfterLocationChange}}var service={};return service.Success=Success,service.Error=Error,initService(),service}angular.module("ngDam").factory("FlashService",FlashService),FlashService.$inject=["$rootScope"]}(),function(){"use strict";function AuthenticationService($http,$cookieStore,$rootScope,$timeout,UserService){function Login(username,password,callback){$timeout(function(){var response;UserService.GetByUsername(username).then(function(user){response=null!==user&&user.password===password?{success:!0}:{success:!1,message:"Username or password is incorrect"},callback(response)})},1e3)}function SetCredentials(username,password){var authdata=Base64.encode(username+":"+password);$rootScope.globals={currentUser:{username:username,authdata:authdata}},$http.defaults.headers.common.Authorization="Basic "+authdata,$cookieStore.put("globals",$rootScope.globals)}function ClearCredentials(){$rootScope.globals={},$cookieStore.remove("globals"),$http.defaults.headers.common.Authorization="Basic"}var service={},Base64={keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0;do chr1=input.charCodeAt(i++),chr2=input.charCodeAt(i++),chr3=input.charCodeAt(i++),enc1=chr1>>2,enc2=(3&chr1)<<4|chr2>>4,enc3=(15&chr2)<<2|chr3>>6,enc4=63&chr3,isNaN(chr2)?enc3=enc4=64:isNaN(chr3)&&(enc4=64),output=output+this.keyStr.charAt(enc1)+this.keyStr.charAt(enc2)+this.keyStr.charAt(enc3)+this.keyStr.charAt(enc4),chr1=chr2=chr3="",enc1=enc2=enc3=enc4="";while(i<input.length);return output},decode:function(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0,base64test=/[^A-Za-z0-9\+\/\=]/g;base64test.exec(input)&&window.alert('There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, "+", "/",and "="\nExpect errors in decoding.'),input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do enc1=this.keyStr.indexOf(input.charAt(i++)),enc2=this.keyStr.indexOf(input.charAt(i++)),enc3=this.keyStr.indexOf(input.charAt(i++)),enc4=this.keyStr.indexOf(input.charAt(i++)),chr1=enc1<<2|enc2>>4,chr2=(15&enc2)<<4|enc3>>2,chr3=(3&enc3)<<6|enc4,output+=String.fromCharCode(chr1),64!==enc3&&(output+=String.fromCharCode(chr2)),64!==enc4&&(output+=String.fromCharCode(chr3)),chr1=chr2=chr3="",enc1=enc2=enc3=enc4="";while(i<input.length);return output}};return service.Login=Login,service.SetCredentials=SetCredentials,service.ClearCredentials=ClearCredentials,service}angular.module("ngDam").factory("AuthenticationService",AuthenticationService),AuthenticationService.$inject=["$http","$cookieStore","$rootScope","$timeout","UserService"]}(),function(){"use strict";function RegisterController(UserService,$location,$rootScope,FlashService){function register(){vm.dataLoading=!0,UserService.Create(vm.user).then(function(response){response.success?(FlashService.Success("Registration successful",!0),$location.path("/login")):(FlashService.Error(response.message),vm.dataLoading=!1)})}var vm=this;vm.register=register}angular.module("ngDam").controller("RegisterController",RegisterController),RegisterController.$inject=["UserService","$location","$rootScope","FlashService"]}(),function(){"use strict";function LoginController($location,AuthenticationService,FlashService){function activation(){AuthenticationService.ClearCredentials()}function login(){vm.dataLoading=!0,AuthenticationService.Login(vm.username,vm.password,function(response){response.success?(AuthenticationService.SetCredentials(vm.username,vm.password),$location.path("/")):(FlashService.Error(response.message),vm.dataLoading=!1)})}var vm=this;vm.login=login,vm.activation=activation,vm.activation()}angular.module("ngDam").controller("LoginController",LoginController),LoginController.$inject=["$location","AuthenticationService","FlashService"]}(),function(){"use strict";angular.module("navigation",[])}(),function(){"use strict";function SidebarCtrl($mdSidenav,$mdMedia){function isLocked(){return $mdMedia("gt-sm")}var vm=this;vm.test="Here is sidebar!",vm.isLocked=isLocked}angular.module("navigation").controller("SidebarCtrl",["$mdMedia",SidebarCtrl])}(),function(){"use strict";function NavbarCtrl($rootScope,$mdSidenav,$mdMedia,$log,UserService,$state){function activation($timeout){}function openSidebar(navID){$mdSidenav(navID).open().then(function(){$log.debug("opened")})}function show(){return $mdMedia("max-width: 1280px")}function useLogout(){$state.transitionTo("login")}var vm=this;vm.user=null,vm.openSidebar=openSidebar,vm.show=show,vm.useLogout=useLogout,vm.activation=activation,vm.activation()}angular.module("navigation").controller("NavbarCtrl",["$rootScope","$mdSidenav","$mdMedia","$log","UserService","$state",NavbarCtrl])}(),function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("app.account",{url:"/account",views:{"main@app":{templateUrl:"app/components/account/account.view.html",controller:"AccountsController as vm"}}})}angular.module("account",["ui.router"]),angular.module("account").config(["$stateProvider",routeConfig])}(),function(){"use strict";function accountsController(){var vm=this;vm.test="This is a test account!"}angular.module("account").controller("AccountsController",accountsController)}(),function(){"use strict";function MainController(){var vm=this;vm.test="Here is main!"}angular.module("ngDam").controller("MainController",MainController)}(),function(){"use strict";function runBlock($rootScope,$location,$cookieStore,$http,$mdSidenav,$mdComponentRegistry){$rootScope.$on("$stateChangeSuccess",function(){$mdComponentRegistry.get("left")&&$mdSidenav("left").close()}),$rootScope.globals=$cookieStore.get("globals")||{},$rootScope.globals.currentUser&&($http.defaults.headers.common.Authorization="Basic "+$rootScope.globals.currentUser.authdata),$rootScope.$on("$locationChangeStart",function(event,next,current){var restrictedPage=$.inArray($location.path(),["/login","/register"])===-1,loggedIn=$rootScope.globals.currentUser;restrictedPage&&!loggedIn&&$location.path("/login")})}runBlock.$inject=["$rootScope","$location","$cookieStore","$http","$mdSidenav","$mdComponentRegistry"],angular.module("ngDam").run(runBlock)}(),function(){"use strict";function routeConfig($stateProvider,$urlRouterProvider){$stateProvider.state("app",{url:"/",views:{"":{templateUrl:"app/main/main.html",controller:"MainController as vm"},"navbar@app":{templateUrl:"app/components/navigation/navbar.view.html",controller:"NavbarCtrl as vm"},"sidebar@app":{templateUrl:"app/components/navigation/sidebar.view.html",controller:"SidebarCtrl as vm"}}}),$stateProvider.state("login",{url:"/login","public":!0,views:{"":{templateUrl:"app/components/signin/login.view.html",controller:"LoginController as vm"},"register@login":{templateUrl:"app/components/signin/register.view.html",controller:"RegisterController as vm"}}}),$stateProvider.state("register",{url:"/register","public":!0,views:{"":{templateUrl:"app/components/signin/register.view.html",controller:"RegisterController as vm"}}}),$urlRouterProvider.otherwise("/login")}angular.module("ngDam").config(["$stateProvider","$urlRouterProvider",routeConfig])}(),function(){"use strict";angular.module("ngDam").config(["$mdThemingProvider",function($mdThemingProvider){$mdThemingProvider.theme("default").primaryPalette("blue-grey",{"default":"100","hue-1":"200","hue-2":"300","hue-3":"400"}).accentPalette("orange",{"default":"500"}).warnPalette("deep-orange").backgroundPalette("grey").dark()}]).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode({enabled:!0,requireBase:!1})}])}(),angular.module("ngDam").run(["$templateCache",function($templateCache){$templateCache.put("app/main/main.html",'<div class="main__container" layout="row" flex layout-fill>\r\n    <div class="main__container-sidebar" layout="column">\r\n        <div class="sidebar" layout="column" layout-fill ui-view="sidebar">\r\n        </div>\r\n    </div>\r\n    <div class="main__container-navbar" layout="column" flex>\r\n        <div class="navbar" ui-view="navbar"></div>\r\n        <div flex class="main__container-content md-accent" role="main" ui-view="main" layout-padding></div>\r\n    </div>\r\n</div>'),$templateCache.put("app/components/account/account.view.html","<div>{{vm.test}}</div>"),$templateCache.put("app/components/navigation/navbar.view.html",'<md-toolbar class="md-whiteframe-z2">\r\n    <div flex layout="row">\r\n        <div flex layout="row" layout-align="start center">\r\n            <md-button class="md-fab md-mini md-icon-button" ng-click="vm.openSidebar(\'left\')" aria-label="Show Sidebar" ng-if="vm.show()">\r\n                <md-icon class="material-icons">menu</md-icon>\r\n            </md-button>\r\n        </div>\r\n        <div flex layout="row" layout-align="end center">\r\n            <md-button class="md-fab md-mini md-icon-button" aria-label="More" ng-click="vm.useLogout()">\r\n                <md-tooltip md-direction="left">\r\n                    User Logout\r\n                </md-tooltip>\r\n                <md-icon class="material-icons">person_outline</md-icon>\r\n            </md-button>\r\n        </div>\r\n    </div>\r\n</md-toolbar>\r\n<md-progress-linear md-mode="determinate" value="40"></md-progress-linear>'),$templateCache.put("app/components/navigation/sidebar.view.html",'<md-sidenav class="md-sidenav-left" md-component-id="left" md-is-locked-open="$mdMedia(\'gt-md\')" flex>\r\n    <md-toolbar class="md-theme-indigo" layout="row" layout-align="center center">\r\n        <div flex="50" layout="row" layout-align="start center">\r\n            <h1 class="md-toolbar-tools">DAM</h1>\r\n        </div>\r\n        <div flex="50" layout="row" layout-align="end center" layout-padding>\r\n            <md-button class="md-fab md-mini md-icon-button" aria-label="More">\r\n                <md-icon class="material-icons">apps</md-icon>\r\n            </md-button>\r\n        </div>\r\n    </md-toolbar>\r\n    <md-list>\r\n        <md-list-item ui-sref="app.account" ui-sref-active="active">\r\n            <md-icon>account_box</md-icon>\r\n            <p> Accounts </p>\r\n        </md-list-item>\r\n    </md-list>\r\n</md-sidenav>'),$templateCache.put("app/components/signin/login.view.html",'<div class="login__container" layout="row" layout-align="center start" ng-cloak layout-fill layout-margin>\r\n    <md-content layout-padding flex-xs="100" flex-sm="80" flex-md="60" flex-lg="40" flex-xl="20">\r\n        <form name="loginForm" ng-submit="vm.login()">\r\n            <div layout="column">\r\n                <md-input-container>\r\n                    <label>Username</label>\r\n                    <input required name="clientUsername" ng-model="vm.username">\r\n                    <div ng-messages="loginForm.clientUsername.$error">\r\n                        <div ng-message="required">Username is required!</div>\r\n                    </div>\r\n                </md-input-container>\r\n\r\n                <md-input-container>\r\n                    <label>Password</label>\r\n                    <input type="password" required name="clientPassword" ng-model="vm.password">\r\n                    <div ng-messages="loginForm.clientPassword.$error">\r\n                        <div ng-message="required">Password is required!</div>\r\n                    </div>\r\n                </md-input-container>\r\n            </div>\r\n            <div>\r\n                <md-button class="md-accent" type="submit" ng-disabled="form.$invalid || vm.dataLoading">Login</md-button>\r\n                <md-button class="md-primary" ui-sref="register">Register</md-button>\r\n            </div>\r\n        </form>\r\n    </md-content>\r\n</div>'),$templateCache.put("app/components/signin/register.view.html",'<div class="register__container" layout="row" layout-align="center start" ng-cloak layout-fill layout-margin>\r\n    <md-content layout-padding flex-xs="100" flex-sm="80" flex-md="60" flex-lg="40" flex-xl="20">\r\n        <form name="registerForm" ng-submit="vm.register()" role="form">\r\n            <div layout="column">\r\n                <md-input-container>\r\n                    <label>First name</label>\r\n                    <input type="text" name="clientFirstName" ng-model="vm.user.firstName" required>\r\n                    <div ng-messages="registerForm.clientFirstName.$error">\r\n                        <div ng-message="required">First name is required!</div>\r\n                    </div>\r\n                </md-input-container>\r\n                <md-input-container>\r\n                    <label>Last name</label>\r\n                    <input type="text" name="clientLastName" ng-model="vm.user.lastName" required>\r\n                    <div ng-messages="registerForm.clientLastName.$error">\r\n                        <div ng-message="required">Last name is required!</div>\r\n                    </div>\r\n                </md-input-container>\r\n                <md-input-container>\r\n                    <label>Username</label>\r\n                    <input type="text" name="clientUsername" ng-model="vm.user.username" required>\r\n                    <div ng-messages="registerForm.clientUsername.$error">\r\n                        <div ng-message="required">Username is required!</div>\r\n                    </div>\r\n                </md-input-container>\r\n                <md-input-container>\r\n                    <label>Password</label>\r\n                    <input type="password" name="clientPassword" ng-model="vm.user.password" required>\r\n                    <div ng-messages="registerForm.clientPassword.$error">\r\n                        <div ng-message="required">Password is required!</div>\r\n                    </div>\r\n                </md-input-container>\r\n            </div>\r\n            <div>\r\n                <md-button class="md-accent" type="submit" ng-disabled="form.$invalid || vm.dataLoading">Register</md-button>\r\n                <md-button class="md-primary" ui-sref="login">Cancel</md-button>\r\n            </div>\r\n        </form>\r\n    </md-content>\r\n</div>')}]);